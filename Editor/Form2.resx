<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>